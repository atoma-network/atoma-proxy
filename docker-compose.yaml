services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    command:
      - "--log.level=INFO"
      # EntryPoints
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      
      # Enable Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      
      # Let's Encrypt (ACME) configuration
      - "--certificatesResolvers.myresolver.acme.httpChallenge=true"
      - "--certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=web"
      - "--certificatesResolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesResolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - atoma-network
    labels:
      # (Optional) Set up a dashboard, etc. not strictly needed
      - "traefik.http.routers.traefik.rule=Host(`traefik.atomacloud.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.services.traefik.loadbalancer.server.port=8090"

  db:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - atoma-network

  atoma-proxy:
    image: ghcr.io/atoma-network/atoma-proxy:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
       TRACE_LEVEL: ${TRACE_LEVEL:-info}
    volumes:
      - ${CONFIG_PATH:-./config.toml}:/app/config.toml
      - ./logs:/app/logs
      - sui-config-volume:/root/.sui/sui_config
      - ${SUI_CONFIG_PATH:-~/.sui/sui_config}:/tmp/.sui/sui_config
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - atoma-network

    labels:
      # Traefik must be enabled explicitly
      - "traefik.enable=true"

      # Serving the Atoma api service on api.atomacloud.com
      - "traefik.http.routers.api.rule=Host(`api.atomacloud.com`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.service=api_service"
      - "traefik.http.services.api_service.loadbalancer.server.port=8080"
      
      # Serving the Atoma proxy authentication service on credentials.atomacloud.com
      - "traefik.http.routers.credentials.rule=Host(`credentials.atomacloud.com`)"
      - "traefik.http.routers.credentials.entrypoints=websecure"
      - "traefik.http.routers.credentials.tls.certresolver=myresolver"
      - "traefik.http.routers.credentials.service=credentials_service"
      - "traefik.http.services.credentials_service.loadbalancer.server.port=8081"

volumes:
  postgres-data:
  sui-config-volume:
  letsencrypt:

networks:
  atoma-network:
    driver: bridge
