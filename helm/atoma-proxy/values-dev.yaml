# Development environment settings
global:
  environment: development
  domain: atoma.network

atomaProxy:
  image:
    repository: ghcr.io/atoma-network/atoma-proxy
    tag: latest
    pullPolicy: Always
  replicas: 1
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: api-dev.atoma.network
        paths:
          - path: /
            pathType: Prefix
            service: http
      - host: credentials-dev.atoma.network
        paths:
          - path: /
            pathType: Prefix
            service: credentials
      - host: prover-dev.atoma.network
        paths:
          - path: /
            pathType: Prefix
            service: prover
  config:
    logLevel: "debug"
    environment: "development"
  extraEnv:
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: http://otel-collector:4317

# PostgreSQL settings
postgresql:
  enabled: true
  auth:
    database: atoma_proxy_dev
    username: atoma_proxy_dev
    password: "dev_password" # Change this in production
  primary:
    persistence:
      size: 5Gi
  service:
    port: 5432

# Monitoring stack settings
prometheus:
  enabled: true
  server:
    persistentVolume:
      size: 5Gi
    ingress:
      enabled: true
      className: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-staging"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
      hosts:
        - prometheus-dev.atoma.network
    service:
      type: LoadBalancer
      servicePort: 9090
      targetPort: 9090

grafana:
  enabled: true
  persistence:
    size: 5Gi
  admin:
    existingSecret: "grafana-admin"
    userKey: admin-user
    passwordKey: admin-password
  security:
    adminPassword: "admin123"
  ingress:
    enabled: true
    hosts:
      - grafana-dev.atoma.network
  service:
    type: LoadBalancer
    port: 3000
    targetPort: 3000
    annotations:
      metallb.universe.tf/address-pool: grafana-pool

loki:
  enabled: true
  auth_enabled: false
  commonConfig:
    path_prefix: /loki
    replication_factor: 1
  # This is required by the helper template
  storage:
    type: filesystem
    bucketNames:
      chunks: loki-chunks
      ruler: loki-ruler
      admin: loki-admin
  # This is the actual storage configuration
  storage_config:
    filesystem:
      chunks_directory: /loki/chunks
      rules_directory: /loki/rules
  persistence:
    size: 5Gi
  limits_config:
    enforce_metric_name: false
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    volume_enabled: true
    retention_period: 96h
  schemaConfig:
    configs:
      - from: "2020-10-24"
        index:
          period: 24h
          prefix: index_
        object_store: filesystem
        schema: v11
        store: boltdb-shipper
  ruler:
    alertmanager_url: http://localhost:9093
  compactor:
    retention_enabled: true
    retention_delete_delay: 2h
    retention_delete_worker_count: 150
  server:
    http_listen_port: 3100
  memberlist:
    join_members:
      - loki-memberlist

tempo:
  enabled: true
  persistence:
    size: 5Gi
  ingress:
    enabled: true
    hosts:
      - tempo-dev.atoma.network
