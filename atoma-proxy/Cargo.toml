[package]
edition.workspace = true
license.workspace = true
name              = "atoma-proxy"
version.workspace = true

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
atoma-auth = { workspace = true }
atoma-p2p = { workspace = true }
atoma-proxy-service = { workspace = true }
atoma-state = { workspace = true }
atoma-sui = { workspace = true }
atoma-utils = { workspace = true }
axum = { workspace = true, features = [ "json" ] }
base64 = { workspace = true }
blake2 = { workspace = true }
clap = { workspace = true }
config = { workspace = true }
dashmap = { workspace = true }
fastcrypto.workspace = true
flume.workspace = true
futures = { workspace = true }
hf-hub = { workspace = true }
opentelemetry = { workspace = true, features = [ "logs", "metrics", "trace" ] }
opentelemetry-otlp = { workspace = true, features = [
    "grpc-tonic",
    "logs",
    "metrics",
    "tls",
    "trace",
] }
opentelemetry_sdk = { workspace = true, features = [ "logs", "metrics", "rt-tokio", "trace" ] }
rand = { workspace = true }
reqwest = { workspace = true, features = [ "json" ] }
serde = { workspace = true, features = [ "derive" ] }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
sqlx = { workspace = true }
sui-keys = { workspace = true }
sui-sdk = { workspace = true }
thiserror = { workspace = true }
tokenizers = { workspace = true }
tokio = { workspace = true, features = [ "full" ] }
tonic = { workspace = true, features = [ "prost", "tls", "tls-roots" ] }
tower = { workspace = true }
tower-http = { workspace = true, features = [ "cors" ] }
tracing = { workspace = true }
tracing-appender = { workspace = true }
tracing-loki = { workspace = true }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, features = [ "env-filter", "json", "time" ] }
url = { workspace = true }
utoipa = { workspace = true, features = [ "axum_extras", "preserve_path_order" ] }
utoipa-swagger-ui = { workspace = true, features = [ "axum" ] }
uuid = { workspace = true }

[features]
google-oauth = [ "atoma-auth/google-oauth", "atoma-proxy-service/google-oauth" ]
