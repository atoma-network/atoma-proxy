[package]
name = "atoma-proxy"
version.workspace = true
edition.workspace = true
license.workspace = true

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
atoma-auth.workspace = true
atoma-p2p.workspace = true
atoma-proxy-service.workspace = true
atoma-state.workspace = true
atoma-sui.workspace = true
atoma-utils.workspace = true
axum = { workspace = true, features = ["json"] }
base64 = { workspace = true }
blake2.workspace = true
clap.workspace = true
config.workspace = true
fastcrypto.workspace = true
flume.workspace = true
futures = { workspace = true }
hf-hub = { workspace = true }
once_cell = "1.20"
opentelemetry = { workspace = true, features = ["trace", "metrics", "logs"] }
opentelemetry_sdk = { workspace = true, features = [
    "rt-tokio",
    "trace",
    "metrics",
    "logs",
] }
opentelemetry-otlp = { workspace = true, features = [
    "metrics",
    "grpc-tonic",
    "trace",
    "tls",
    "logs",
] }
rand = { workspace = true }
reqwest = { workspace = true, features = ["json"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_yaml = { workspace = true }
sqlx.workspace = true
sui-keys.workspace = true
sui-sdk.workspace = true
thiserror = { workspace = true }
tokenizers.workspace = true
tokio = { workspace = true, features = ["full"] }
tonic = { workspace = true, features = ["tls", "tls-roots", "prost"] }
tower = { workspace = true }
tower-http = { workspace = true, features = ["cors"] }
tracing-appender.workspace = true
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, features = [
    "env-filter",
    "json",
    "time",
] }
tracing.workspace = true
utoipa = { workspace = true, features = ["axum_extras", "preserve_path_order"] }
utoipa-swagger-ui = { workspace = true, features = ["axum"] }

[features]
google-oauth = ["atoma-auth/google-oauth", "atoma-proxy-service/google-oauth"]
